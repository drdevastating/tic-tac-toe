body{
    background-color: pink;
    margin: 0;
}
:root{
    --cell-size:150px;
    --mark-size:calc(var(--cell-size)* 0.9);
}
.container{
    height: 100vh;
    display: grid;
    grid-template-columns: 2fr 3fr 2fr;
    grid-template-rows: 1fr 3fr 1fr;
}
.game{
    border: solid black 4px;
    display: grid;
    justify-content: center;
    align-content: center;
    align-items: center;
    justify-items: center;
    grid-template-columns: repeat(3,auto);
    grid-template-rows: repeat(3,auto);
}

.cell{
    width: var(--cell-size);
    height: var(--cell-size);
    border:solid white 2px;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
}
.cell.x, .cell.o{
    cursor: not-allowed;
}
.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3){
    border-top: none;
}
.cell:nth-child(3n+1){
    border-left: none;
}
.cell:nth-child(3n+3){
    border-right: none;
}
.cell:last-child,
.cell:nth-child(7),
.cell:nth-child(8){
    border-bottom: none;
}

.cell.x::before,
.cell.x::after,
.game.x .cell:not(.x):not(.o):hover:before,
.game.x .cell:not(.x):not(.o):hover::after
{
    content: '';
    width: calc(var(--mark-size)*0.15);
    height: var(--mark-size);
    position: absolute;
    background-color: black;
}
.game.x .cell:not(.x):not(.o):hover:before,
.game.x .cell:not(.x):not(.o):hover::after{
    background-color: lightcyan;
}
.cell.x::before,
.game.x .cell:not(.x):not(.o):hover::before{
    transform: rotate(45deg);
}
.cell.x::after,
.game.x .cell:not(.x):not(.o):hover::after{
    transform: rotate(-45deg);
}

.cell.o::before,
.cell.o::after,
.game.o .cell:not(.x):not(.o):hover:before,
.game.o .cell:not(.x):not(.o):hover::after{
    content: '';
    position: absolute;
    border-radius: 100%;
}
.cell.o::before,
.game.o .cell:not(.x):not(.o):hover::before{
    width: var(--mark-size);
    height: var(--mark-size);
    background-color: black;
}
.cell.o::after,
.game.o .cell:not(.x):not(.o):hover::after{
    width: calc(var(--mark-size)* 0.7);
    height: calc(var(--mark-size)*0.7);
    background-color: pink;
}
.game.o .cell:not(.x):not(.o):hover:before{
    background-color: lightcyan;
}

.winning-message{
    display: none;
    position: fixed;
    top: 0;
    bottom: 0;
    left:0;
    right: 0;
    background-color: rgb(221, 221, 226,0.9);
    flex-direction: column;
    justify-content: center;
    align-items: center;
    color: black;
    font-size: 5rem;
}
.winning-message button{
    font-size: 3rem;
    background-color:white;
    border: 1px solid black;
    padding: .25rem .5rem;
    border-radius: 4px;
    cursor: pointer;
}

.winning-message.show{
    display: flex; /* we want it to be only shown when game gets over */
}




#overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7); /* Dim background */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

/* Style for the form content */
#overlay h2 {
    color: white;
    margin-bottom: 20px;
}

#overlay label {
    display: block;
    color: white;
    margin: 10px 0 5px;
}

#overlay input[type="text"] {
    width: 10vw;
    padding: 10px;
    margin-bottom: 20px;
    border-radius: 5px;
    border: 1px solid #ccc;
    font-size: 16px;
}

#overlay button {
    padding: 10px 20px;
    background-color: #28a745;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 16px;
}

#overlay button:hover {
    background-color: #218838;
}

/* Hide overlay after names are submitted */
.hidden {
    display: none;
}